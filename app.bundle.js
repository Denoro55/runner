!function(e){function t(t){for(var s,a,r=t[0],h=t[1],c=t[2],d=0,p=[];d<r.length;d++)a=r[d],Object.prototype.hasOwnProperty.call(n,a)&&n[a]&&p.push(n[a][0]),n[a]=0;for(s in h)Object.prototype.hasOwnProperty.call(h,s)&&(e[s]=h[s]);for(l&&l(t);p.length;)p.shift()();return o.push.apply(o,c||[]),i()}function i(){for(var e,t=0;t<o.length;t++){for(var i=o[t],s=!0,r=1;r<i.length;r++){var h=i[r];0!==n[h]&&(s=!1)}s&&(o.splice(t--,1),e=a(a.s=i[0]))}return e}var s={},n={0:0},o=[];function a(t){if(s[t])return s[t].exports;var i=s[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=s,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)a.d(i,s,function(t){return e[t]}.bind(null,s));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var r=window.webpackJsonp=window.webpackJsonp||[],h=r.push.bind(r);r.push=t,r=r.slice();for(var c=0;c<r.length;c++)t(r[c]);var l=h;o.push([2,1]),i()}([,function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Vector=void 0;var s=i(6);Object.defineProperty(t,"Vector",{enumerable:!0,get:function(){return s.Vector}})},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),i(0);const s=i(3),n=i(4),o={type:Phaser.AUTO,parent:"game-container",width:window.innerWidth,height:Math.max(667,window.innerHeight),physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[n.GameScene]};new s.Game(o)},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game=void 0;class s extends Phaser.Game{constructor(e){super(e),console.info("create game",e,this)}}t.Game=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GameScene=void 0;var s=i(5);Object.defineProperty(t,"GameScene",{enumerable:!0,get:function(){return s.GameScene}})},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GameScene=void 0;const s=i(1),n=i(7),o=i(8),a=i(11),r=i(12),h=i(13),c=i(14);let l,d,p,u,g,f;class m extends c.Scene{constructor(){super({key:a.ESceneName.game}),this.gameTime=0,this.deltaTime=0,this.lastSpawnTime=0,this.nextSpawnTime=0,this.additionalSpawnTime=0,this.score=0,this.currentLevel=0,this.currentWaveType=a.EWaveType.default,this.currentWaveTime=0,this.wavesParams={default:{max:0,reload:0},double:{max:2,reload:3},thriple:{max:3,reload:4},ghost:{max:2,reload:2},positive:{max:2,reload:2}},this.spawnTimes=[],this.obstacles=[],this.handleKeyDown=e=>{let t=0;this.obstacles.forEach(i=>{i.getNumber()===e&&i.isInCenter()&&"positive"!==i.getType()&&(i.destroy(),t+=1,this.updateScore(1))}),0===t&&this.updateScore(-5)}}init(){}create(){console.info("create game!");const e=this.getGameConfig(),t=this.getGameSize();this.graphics=this.add.graphics({lineStyle:{width:r.gameConfig.containerBorder,color:16777215}}),this.cellsGraphics=this.add.graphics({lineStyle:{width:r.gameConfig.containerBorder,color:16777215}}),this.scoreText=this.add.text(t.width/2,e.cellSize,this.score.toString(),{fontFamily:"Arial",fontSize:"22px",color:"#ffffff"}).setOrigin(.5),this.currentLevelText=this.add.text(t.width/2,e.cellSize+25,"",{fontFamily:"Arial",fontSize:"16px",color:"#ffffff"}).setOrigin(.5),this.scoreText.style.color=r.colors.green,this.initKeyboard(),this.draw()}initKeyboard(){l=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ONE),d=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.TWO),p=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.THREE),u=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.FOUR),g=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.FIVE),f=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SIX),l.on("down",()=>{this.handleKeyDown(1)}),d.on("down",()=>{this.handleKeyDown(2)}),p.on("down",()=>{this.handleKeyDown(3)}),u.on("down",()=>{this.handleKeyDown(4)}),g.on("down",()=>{this.handleKeyDown(5)}),f.on("down",()=>{this.handleKeyDown(6)})}update(e,t){this.deltaTime=t/16,this.gameTime+=15*this.deltaTime,this.obstacles.forEach(e=>{e.update()}),this.gameTime>this.nextSpawnTime&&this.spawnObstacle(),this.scoreText.text=this.score.toString(),this.updateDifficulty(),this.updateLevel()}updateDifficulty(){this.additionalSpawnTime=0,this.currentLevel>=3&&(this.additionalSpawnTime=-200)}updateLevel(){let e=0;for(let t=0;t<r.gameConfig.levels.length&&!(r.gameConfig.levels[t]>this.score);t++)e+=1;this.currentLevel=e,this.currentLevelText.text="Сложность: "+this.currentLevel.toString()}isNextWaveReady(){return this.currentWaveTime>=this.wavesParams[this.currentWaveType].max}updateWaveTime(){this.isNextWaveReady()?(this.currentWaveTime-=this.wavesParams[this.currentWaveType].reload,this.updateWaveType()):this.currentWaveTime+=1}updateWaveType(){if(this.currentWaveType=a.EWaveType.default,h.debugLog("updateWaveType",this.currentLevel),this.currentLevel>=2){const e=Math.random();this.currentWaveType=e>.75?a.EWaveType.double:e>.4?a.EWaveType.thriple:e>.2?a.EWaveType.positive:a.EWaveType.ghost}else{const e=Math.random();this.currentWaveType=e>.66?a.EWaveType.double:e>.33?a.EWaveType.ghost:a.EWaveType.positive}}spawnObstacle(){if(h.debugLog("spawn obstacle","isNextWaveReady =",this.isNextWaveReady(),this.currentWaveTime,this.currentWaveType,this.getWaveType(),this.spawnTimes),this.isNextWaveReady()){const e=this.getWaveType();e===a.EWaveType.double&&this.spawnTimes.push(r.gameConfig.minSpawnTime),e===a.EWaveType.thriple&&(this.spawnTimes.push(r.gameConfig.minSpawnTime),this.spawnTimes.push(r.gameConfig.minSpawnTime))}const e=this.getObstacleType();this.obstacles.push(new o.BasicBox(this,{width:1,height:1,number:Math.ceil(6*Math.random()),type:e})),this.nextSpawnTime=this.gameTime+this.getSpawnTime(),this.updateWaveTime()}destroyObstacle(e){this.obstacles=this.obstacles.filter(t=>t!==e)}getSpawnTime(){return this.spawnTimes.shift()||r.gameConfig.spawnTime+this.additionalSpawnTime}getObstacleType(){if(this.isNextWaveReady()){const e=this.getWaveType();if(e===a.EWaveType.positive)return a.EObstacleType.positive;if(e===a.EWaveType.ghost)return a.EObstacleType.ghost}return a.EObstacleType.default}getWaveType(){return this.isNextWaveReady()?this.currentWaveType:a.EWaveType.default}getGameConfig(){return r.gameConfig}getCellSize(){return r.gameConfig.cellSize}getPos(e){return e*this.getCellSize()}getYContainerPos(e){return this.getContainerStartPos().y+e*this.getCellSize()}getXContainerPos(e){return this.getContainerStartPos().x+e*this.getCellSize()}getContainerHeight(){return r.gameConfig.yCellsCount*r.gameConfig.cellSize+2*r.gameConfig.containerBorder}getContainerStartPos(){const e=this.getGameCenter(),t=this.getGameSize(),i=this.getContainerHeight(),s=t.height-3*r.gameConfig.controlSize-4*r.gameConfig.cellSize-i;return{x:e.x-r.gameConfig.xCellsCount*r.gameConfig.cellSize/2,y:2*r.gameConfig.cellSize+s/2}}getCenterLine(){const e=this.getContainerStartPos(),t=this.getContainerHeight();return e.y+t}onOutOfGame(){this.updateScore(-5)}updateScore(e){this.score+=e,this.score<0&&(this.score=0),this.scoreText.setStyle({color:e>0?r.colors.green:r.colors.red})}draw(){this.drawCells(),this.drawCenterLine(),this.drawControls()}drawCenterLine(){const e=this.getContainerStartPos(),t=this.getGameSize(),i=this.getContainerHeight(),s=new Phaser.Geom.Line(0,e.y+i,t.width,e.y+i);this.graphics.strokeLineShape(s)}drawGameContainer(){const e=this.getContainerStartPos(),t=r.gameConfig.yCellsCount*r.gameConfig.cellSize+2*r.gameConfig.containerBorder,i=new Phaser.Geom.Rectangle(e.x-r.gameConfig.containerBorder,e.y-r.gameConfig.containerBorder,r.gameConfig.xCellsCount*r.gameConfig.cellSize+2*r.gameConfig.containerBorder,t);this.graphics.strokeRectShape(i)}drawCells(){this.cellsGraphics.setAlpha(.075);for(let e=0;e<r.gameConfig.xCellsCount;e++)for(let t=0;t<r.gameConfig.yCellsCount;t++){const i=new Phaser.Geom.Rectangle(this.getXContainerPos(e),this.getYContainerPos(t),this.getCellSize(),this.getCellSize());this.cellsGraphics.strokeRectShape(i)}}drawControls(){const e=this.getGameSize(),t=this.getGameConfig(),i=t.controlSize;for(let o=0;o<3;o++){const a=3-o;new n.Button(this,{pos:new s.Vector(t.containerBorder,e.height-t.containerBorder-i-i*o),width:i,height:i,text:a.toString(),onPointerDown:()=>{this.handleKeyDown(a)}})}for(let o=0;o<3;o++){const a=6-o;new n.Button(this,{pos:new s.Vector(e.width-i-t.containerBorder,e.height-t.containerBorder-i-i*o),width:i,height:i,text:a.toString(),onPointerDown:()=>{this.handleKeyDown(a)}})}}}t.GameScene=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Vector=void 0;t.Vector=class{constructor(e,t){this.x=e,this.y=t}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Button=void 0;t.Button=class{constructor(e,t){this.scene=e,this.params=t,this.rectShape=new Phaser.Geom.Rectangle(t.pos.x,t.pos.y,t.width,t.height),this.graphics=e.add.graphics({lineStyle:{width:4,color:16777215}}).setInteractive(this.rectShape,Phaser.Geom.Rectangle.Contains),this.buttonText=e.add.text(t.pos.x+t.width/2,t.pos.y+t.height/2,this.params.text,{fontFamily:"Arial",fontSize:"22px",color:"#ffffff"}).setOrigin(.5),this.initListeners(),this.draw()}initListeners(){const{graphics:e,params:t}=this;e.on("pointerdown",()=>{var e;null===(e=t.onPointerDown)||void 0===e||e.call(t)})}draw(){this.graphics.strokeRectShape(this.rectShape)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BasicBox=void 0;var s=i(9);Object.defineProperty(t,"BasicBox",{enumerable:!0,get:function(){return s.BasicBox}})},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BasicBox=void 0;const s=i(1),n=i(10);class o extends n.Obstacle{constructor(e,t){super(e,t),this.speed=2,this.params=t;const i=this.scene.getGameConfig();this.graphics=this.scene.add.graphics({lineStyle:{width:i.containerBorder,color:16777215}});const n=this.scene.getXContainerPos(Math.floor(Math.random()*(i.xCellsCount-this.params.width+1))),o=this.scene.getYContainerPos(1-this.params.height);this.pos=new s.Vector(n,o),this.text=e.add.text(-100,-100,this.params.number.toString(),{fontFamily:"Arial",fontSize:"22px",color:"#ffffff"}).setOrigin(.5).setAlpha("ghost"===this.params.type?0:1),this.draw()}update(){const{type:e}=this.params,t=this.scene.getGameConfig();if(this.pos.y+=this.scene.deltaTime*this.speed,this.text.x=this.pos.x+t.cellSize/2,this.text.y=this.pos.y+t.cellSize/2,this.pos.y>this.scene.getYContainerPos(t.yCellsCount+1))return this.destroy(),void("positive"!==e&&this.scene.onOutOfGame());if(this.isInCenter()||"positive"==e?this.graphics.setAlpha(1):this.graphics.setAlpha(.5),"ghost"===e&&0===this.text.alpha){const e=this.scene.getCenterLine(),t=this.scene.getGameConfig();this.pos.y+3*t.cellSize>e&&this.text.setAlpha(1)}this.draw()}destroy(){this.graphics.clear(),this.scene.destroyObstacle(this),this.text.destroy()}draw(){this.graphics.clear();const e=this.scene.getGameConfig(),t=new Phaser.Geom.Rectangle(this.pos.x,this.pos.y,e.cellSize*this.params.width,e.cellSize*this.params.height);this.graphics.strokeRectShape(t)}}t.BasicBox=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Obstacle=void 0;t.Obstacle=class{constructor(e,t){this.scene=e,this.baseParams=t}isInCenter(){const e=this.scene.getCenterLine(),t=this.scene.getGameConfig();return this.pos.y+t.cellSize>e&&this.pos.y<e}getNumber(){return this.baseParams.number}getType(){return this.baseParams.type}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EWaveType=t.EObstacleType=t.ESceneName=void 0,function(e){e.game="GameScene"}(t.ESceneName||(t.ESceneName={})),function(e){e.default="default",e.ghost="ghost",e.positive="positive"}(t.EObstacleType||(t.EObstacleType={})),function(e){e.default="default",e.ghost="ghost",e.positive="positive",e.double="double",e.thriple="thriple"}(t.EWaveType||(t.EWaveType={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gameConfig=t.colors=void 0,t.colors={red:"#e33d17",green:"#6eff00"},t.gameConfig={cellSize:40,containerBorder:4,controlSize:70,xCellsCount:6,yCellsCount:6,spawnTime:1250,minSpawnTime:500,levels:[5,20,40]}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.debugLog=void 0;t.debugLog=(...e)=>{console.log(e)}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Scene=void 0;class s extends Phaser.Scene{getGameSize(){return{width:this.game.config.width,height:this.game.config.height}}getGameCenter(){const e=this.getGameSize();return{x:Math.round(e.width/2),y:Math.round(e.height/2)}}}t.Scene=s}]);